# Generated by Django 4.2.1 on 2024-08-08 16:46

import admin_panel.utilities
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=admin_panel.utilities.get_timestamp_path, verbose_name='Сменить изображение')),
                ('phone', models.CharField(max_length=19, validators=[django.core.validators.MaxLengthValidator(19), django.core.validators.MinLengthValidator(19), django.core.validators.ProhibitNullCharactersValidator(), django.core.validators.RegexValidator('^\\+38 \\(\\d{3}\\) \\d{3}-?\\d{2}-?\\d{2}$', message='Неверно введён номер телефона.Пример ввода: +38 (098) 567-81-23')], verbose_name='Номер телефона')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('active', 'Активен'), ('disabled', 'Отключен')], default='new', max_length=50, verbose_name='Статус')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'custom_user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('extra_title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('extra_description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('director_photo', models.ImageField(blank=True, null=True, upload_to=admin_panel.utilities.get_timestamp_path, verbose_name='Рекомендуемый размер: (250x310)')),
            ],
            options={
                'db_table': 'about_us',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('debit_credit', models.CharField(choices=[('plus', 'Приход'), ('minus', 'Расход')], default='plus', max_length=100, verbose_name='Приход/расход')),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, verbose_name='Номер квартиры')),
                ('square', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True, verbose_name='Площадь (кв.м.)')),
            ],
            options={
                'db_table': 'flat',
            },
        ),
        migrations.CreateModel(
            name='FlatOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID', models.CharField(max_length=11, null=True, unique=True)),
                ('patronymic', models.CharField(blank=True, default='', max_length=100, verbose_name='Отчество')),
                ('viber', models.CharField(blank=True, default='', max_length=100, verbose_name='Viber')),
                ('telegram', models.CharField(blank=True, default='', max_length=100, verbose_name='Telegram')),
                ('bio', models.TextField(blank=True, default='', verbose_name='О владельце (заметки)')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'flat_owner',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Этаж')),
            ],
            options={
                'db_table': 'floor',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'gallery',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Дом')),
                ('address', models.CharField(blank=True, default='', max_length=100, verbose_name='Адрес')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.gallery')),
            ],
            options={
                'db_table': 'house',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Ед. изм.')),
            ],
            options={
                'db_table': 'measure',
            },
        ),
        migrations.CreateModel(
            name='PaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название компании')),
                ('description', models.TextField(blank=True, default='', verbose_name='Информация')),
            ],
            options={
                'db_table': 'payment_detail',
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('is_complete', models.BooleanField(default=True)),
                ('date_published', models.DateField(default='2012-12-12')),
                ('status', models.CharField(choices=[('paid', 'Оплачена'), ('partially_paid', 'Частично оплачена'), ('unpaid', 'Не оплачена')], default='unpaid', max_length=50, verbose_name='Статус')),
                ('start_date', models.DateField(default='2012-12-12')),
                ('end_date', models.DateField(default='2012-12-12')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat')),
            ],
            options={
                'db_table': 'receipt',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='ReceiptExcelDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('file', models.FileField(upload_to='receipt', verbose_name='Загрузить пользовательский шаблон')),
                ('by_default', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'receipt_excel_doc',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('statistics', models.BooleanField(default=False, verbose_name='')),
                ('paybox', models.BooleanField(default=False, verbose_name='')),
                ('receipt', models.BooleanField(default=False, verbose_name='')),
                ('personal_account', models.BooleanField(default=False, verbose_name='')),
                ('flat', models.BooleanField(default=False, verbose_name='')),
                ('flat_owner', models.BooleanField(default=False, verbose_name='')),
                ('house', models.BooleanField(default=False, verbose_name='')),
                ('mailbox', models.BooleanField(default=False, verbose_name='')),
                ('application', models.BooleanField(default=False, verbose_name='')),
                ('indication', models.BooleanField(default=False, verbose_name='')),
                ('manage_site', models.BooleanField(default=False, verbose_name='')),
                ('service', models.BooleanField(default=False, verbose_name='')),
                ('tariff', models.BooleanField(default=False, verbose_name='')),
                ('role', models.BooleanField(default=False, verbose_name='')),
                ('users', models.BooleanField(default=False, verbose_name='')),
                ('payment_detail', models.BooleanField(default=False, verbose_name='')),
                ('payment_article', models.BooleanField(default=False, verbose_name='')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('keywords', models.TextField(blank=True, default='', verbose_name='Ключевые слова')),
            ],
            options={
                'db_table': 'seo',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Услуга')),
                ('show_in_indication', models.BooleanField(default=False, verbose_name='Показывать в счетчиках')),
                ('measure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.measure', verbose_name='Ед. изм.')),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='TariffSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название тарифа')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание тарифа')),
                ('date_edited', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tariff_system',
                'ordering': ['-date_edited'],
            },
        ),
        migrations.CreateModel(
            name='TariffSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='gallery_tariff', to='admin_panel.gallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'tarif_site',
            },
        ),
        migrations.CreateModel(
            name='TariffService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена')),
                ('currency', models.CharField(blank=True, default='грн', verbose_name='Валюта')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.service', verbose_name='Услуга')),
                ('tariff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.tariffsystem')),
            ],
            options={
                'db_table': 'tariff_service',
            },
        ),
        migrations.CreateModel(
            name='SeviceSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_query_name='gallery_service', to='admin_panel.gallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'service_site',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Секция')),
                ('house', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.house')),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='ReceiptService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена')),
                ('consumption', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, verbose_name='Цена')),
                ('measure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.measure', verbose_name='Ед. изм.')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.receipt')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.service', verbose_name='Услуга')),
            ],
            options={
                'db_table': 'receipt-service',
            },
        ),
        migrations.AddField(
            model_name='receipt',
            name='service',
            field=models.ManyToManyField(blank=True, to='admin_panel.service'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.tariffsystem'),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to=admin_panel.utilities.get_timestamp_path, verbose_name='')),
                ('gallery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photo_set', to='admin_panel.gallery')),
            ],
            options={
                'db_table': 'photo',
            },
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, unique=True, verbose_name='№')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('disabled', 'Не активен')], default='active', max_length=50, verbose_name='Статус')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_account', to='admin_panel.flat', verbose_name='Квартира')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.house', verbose_name='Дом')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.section', verbose_name='Секция')),
            ],
            options={
                'db_table': 'personal_account',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('director', 'Директор'), ('manager', 'Управляющий'), ('accountant', 'Бухгалтер'), ('electrician', 'Электрик'), ('plumber', 'Сантехник'), ('locksmith', 'Слесарь')], default='director', max_length=50, verbose_name='Роль')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'personal',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Paybox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('date_published', models.DateField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Сумма')),
                ('is_complete', models.BooleanField(default=True)),
                ('debit_credit', models.CharField(choices=[('plus', 'Приход'), ('minus', 'Расход')], default='plus', max_length=100, verbose_name='Приход/расход')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.article')),
                ('flat_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.flatowner')),
                ('personal_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.personalaccount')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.personal')),
            ],
            options={
                'db_table': 'paybox',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('show_app_links', models.BooleanField(default=True, verbose_name=' Показать ссылки на приложения')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='gallery_main', to='admin_panel.gallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'main_page',
            },
        ),
        migrations.CreateModel(
            name='MailBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('description', models.TextField(blank=True, default='', verbose_name='')),
                ('date_published', models.DateTimeField(auto_now=True)),
                ('unread', models.BooleanField(default=True)),
                ('flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat')),
                ('flat_owners', models.ManyToManyField(to='admin_panel.flatowner')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.floor')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.house')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.section')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.personal')),
            ],
            options={
                'db_table': 'mailbox',
            },
        ),
        migrations.CreateModel(
            name='InfoPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('img', models.ImageField(blank=True, null=True, upload_to=admin_panel.utilities.get_timestamp_path, verbose_name='')),
                ('gallery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.gallery')),
            ],
            options={
                'db_table': 'info_photo',
            },
        ),
        migrations.CreateModel(
            name='Indication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('indication_val', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=6, verbose_name='Показания')),
                ('date_published', models.DateField()),
                ('status', models.CharField(choices=[('new', 'Новое'), ('considered', 'Учтено'), ('considered and paid', 'Учтено и оплачено'), ('null', 'Нулевое')], default='new', max_length=50, verbose_name='Статус')),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat', verbose_name='Квартира')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.service', verbose_name='Счётчик')),
            ],
            options={
                'db_table': 'indication',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='HouseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.house')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.personal')),
            ],
            options={
                'db_table': 'house_user',
            },
        ),
        migrations.AddField(
            model_name='floor',
            name='house',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.house'),
        ),
        migrations.AddField(
            model_name='flat',
            name='flat_owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.flatowner', verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='flat',
            name='floor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.floor', verbose_name='Этаж'),
        ),
        migrations.AddField(
            model_name='flat',
            name='house',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.house', verbose_name='Дом'),
        ),
        migrations.AddField(
            model_name='flat',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.section', verbose_name='Секция'),
        ),
        migrations.AddField(
            model_name='flat',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.tariffsystem', verbose_name='Тариф'),
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('full_name', models.CharField(blank=True, default='', max_length=100, verbose_name='ФИО')),
                ('location', models.CharField(blank=True, default='', max_length=100, verbose_name='Локация')),
                ('address', models.CharField(blank=True, default='', max_length=100, verbose_name='Адрес')),
                ('email', models.EmailField(blank=True, max_length=150, null=True, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('phone', models.CharField(max_length=19, validators=[django.core.validators.MaxLengthValidator(19), django.core.validators.MinLengthValidator(19), django.core.validators.ProhibitNullCharactersValidator(), django.core.validators.RegexValidator('^\\+38 \\(\\d{3}\\) \\d{3}-?\\d{2}-?\\d{2}$', message='Неверно введён номер телефона.Пример ввода: +38 (098) 567-81-23')], verbose_name='Телефон')),
                ('site_link', models.URLField(default='', validators=[django.core.validators.URLValidator(message='XYZ', regex='https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}([-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)')], verbose_name='Ссылка на коммерческий сайт')),
                ('coordinate', models.TextField(verbose_name='Код карты')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_published', models.DateField()),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('time_published', models.TimeField()),
                ('status', models.CharField(choices=[('', 'Выберите...'), ('new', 'Новое'), ('in work', 'В работе'), ('complete', 'Выполнено')], default='new', max_length=50, verbose_name='Статус')),
                ('user_type', models.CharField(choices=[('', 'Любой специалист'), ('director', 'Директор'), ('manager', 'Управляющий'), ('accountant', 'Бухгалтер'), ('electrician', 'Электрик'), ('plumber', 'Сантехник')], default='', max_length=100)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat', verbose_name='Квартира')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.personal')),
            ],
            options={
                'db_table': 'application',
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='AboutUsDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='docs', verbose_name='PDF, JPG (макс. размер 20 Mb)')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Название документа')),
                ('about_us', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.aboutus')),
            ],
            options={
                'db_table': 'about_us_document',
            },
        ),
        migrations.AddField(
            model_name='aboutus',
            name='extra_gallery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_gallery_about', to='admin_panel.gallery'),
        ),
        migrations.AddField(
            model_name='aboutus',
            name='gallery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_query_name='gallery_about', to='admin_panel.gallery'),
        ),
        migrations.AddField(
            model_name='aboutus',
            name='seo',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo'),
        ),
    ]
